name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Mude para a branch que você deseja monitorar

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'  # Ajuste conforme necessário

    - name: Install dependencies
      run: npm ci  # Use npm install se não usar o lockfile

    - name: Compile Tailwind CSS
      run: npx tailwindcss -i public/css/styles.css -o public/css/styles.css --minify  # Ajuste os caminhos conforme necessário

    
    - name: Compile Sass
      run: npx sass src/sass/output.scss public/css/styles.css  # Ajuste os caminhos conforme necessário

    - name: Render EJS files
      run: |
        mkdir -p public  # Cria o diretório público, se necessário
        node -e "const ejs = require('ejs'); const fs = require('fs'); const path = require('path'); const renderEJS = (file) => { ejs.renderFile(file, {}, (err, str) => { if (err) throw err; fs.writeFileSync(path.join('public', path.basename(file, '.ejs') + '.html'), str); }); }; ['src/views/index.ejs', 'src/views/partials/other.ejs', 'src/views/other.ejs'].forEach(renderEJS);"  # Ajuste os caminhos conforme necessário

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public  # Diretório onde o HTML gerado é salvo
